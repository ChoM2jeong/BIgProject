{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final\\\\big-1-main\\\\src\\\\components\\\\js\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/Chatbot.css'; // 챗봇에 대한 CSS 파일 추가\n\n// 아이콘 경로 지정\nimport botIcon from '../../logo/bot_icon.png';\nimport closeIcon from '../../logo/close_icon.png';\nimport searchIcon from '../../logo/search_logo.png';\nimport soundIcon from '../../logo/sound.png';\nimport originIcon from '../../logo/orgin.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot({\n  passage,\n  question\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [chatInput, setChatInput] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isSpeaking, setIsSpeaking] = useState(false); // TTS 상태를 관리하기 위한 상태 추가\n\n  useEffect(() => {\n    console.log(\"Passage from props:\", passage);\n    console.log(\"Question from props:\", question);\n  }, [passage, question]);\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n    setChatInput('');\n    setChatHistory([]);\n  };\n  const handleInputChange = e => {\n    setChatInput(e.target.value);\n  };\n  const handleSendClick = async () => {\n    if (!chatInput.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: chatInput,\n      timestamp: new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n    setChatHistory([...chatHistory, userMessage]);\n    try {\n      console.log(\"Sending data to server:\", {\n        question: chatInput,\n        passage: passage\n      }); // 디버깅용 로그\n      const response = await axios.post('http://localhost:5000/ask', {\n        question: chatInput,\n        passage: passage\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const botMessage = {\n        sender: 'bot',\n        text: response.data.answer,\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setChatHistory([...chatHistory, userMessage, botMessage]);\n    } catch (error) {\n      console.error('Error fetching chatbot response:', error);\n      const errorMessage = {\n        sender: 'bot',\n        text: '요청을 처리하는 중 오류가 발생했습니다.',\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setChatHistory([...chatHistory, userMessage, errorMessage]);\n    }\n    setChatInput('');\n  };\n  const handleSpeakClick = () => {\n    if (isSpeaking) {\n      speechSynthesis.cancel();\n      setIsSpeaking(false);\n    } else {\n      if (chatHistory.length > 0) {\n        const lastBotMessage = chatHistory.filter(msg => msg.sender === 'bot').pop();\n        if (lastBotMessage) {\n          const utterance = new SpeechSynthesisUtterance(lastBotMessage.text);\n          utterance.onend = () => setIsSpeaking(false);\n          speechSynthesis.speak(utterance);\n          setIsSpeaking(true);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-icons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-icon\",\n        onClick: toggleChatbot,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: originIcon,\n          alt: \"\\uB85C\\uBD07 \\uC774\\uBBF8\\uC9C0\",\n          className: \"robot_img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"read-icon\",\n        onClick: handleSpeakClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: soundIcon,\n          alt: \"\\uC77D\\uAE30 \\uC544\\uC774\\uCF58\",\n          className: \"read_img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: botIcon,\n          alt: \"\\uB85C\\uACE0\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: \"QUIZZY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: toggleChatbot,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: closeIcon,\n            alt: \"\\uC885\\uB8CC\",\n            className: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-container\",\n          children: chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-row ${msg.sender}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-container ${msg.sender === 'user' ? 'user-message' : 'bot-message'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bubble\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-text\",\n                  children: msg.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `timestamp-container ${msg.sender === 'user' ? 'user-timestamp' : 'bot-timestamp'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timestamp\",\n                children: msg.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"search-content\",\n            value: chatInput,\n            onChange: handleInputChange,\n            placeholder: \"Type your message here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendClick,\n            className: \"send-button\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: searchIcon,\n              alt: \"\\uAC80\\uC0C9\",\n              className: \"search_icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"SqI51blP4OQq+1EQIG5XXHQ/Ztc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","botIcon","closeIcon","searchIcon","soundIcon","originIcon","jsxDEV","_jsxDEV","Chatbot","passage","question","_s","isOpen","setIsOpen","chatInput","setChatInput","chatHistory","setChatHistory","isSpeaking","setIsSpeaking","console","log","toggleChatbot","handleInputChange","e","target","value","handleSendClick","trim","userMessage","sender","text","timestamp","Date","toLocaleTimeString","hour","minute","response","post","headers","botMessage","data","answer","error","errorMessage","handleSpeakClick","speechSynthesis","cancel","length","lastBotMessage","filter","msg","pop","utterance","SpeechSynthesisUtterance","onend","speak","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final/big-1-main/src/components/js/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/Chatbot.css'; // 챗봇에 대한 CSS 파일 추가\n\n// 아이콘 경로 지정\nimport botIcon from '../../logo/bot_icon.png';\nimport closeIcon from '../../logo/close_icon.png';\nimport searchIcon from '../../logo/search_logo.png';\nimport soundIcon from '../../logo/sound.png';\nimport originIcon from '../../logo/orgin.png';\n\nfunction Chatbot({ passage, question }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [chatInput, setChatInput] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isSpeaking, setIsSpeaking] = useState(false); // TTS 상태를 관리하기 위한 상태 추가\n\n  useEffect(() => {\n    console.log(\"Passage from props:\", passage);\n    console.log(\"Question from props:\", question);\n  }, [passage, question]);\n\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n    setChatInput('');\n    setChatHistory([]);\n  };\n\n  const handleInputChange = (e) => {\n    setChatInput(e.target.value);\n  };\n\n  const handleSendClick = async () => {\n    if (!chatInput.trim()) return;\n\n    const userMessage = { sender: 'user', text: chatInput, timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) };\n    setChatHistory([...chatHistory, userMessage]);\n\n    try {\n      console.log(\"Sending data to server:\", { question: chatInput, passage: passage }); // 디버깅용 로그\n      const response = await axios.post('http://localhost:5000/ask', {\n        question: chatInput,\n        passage: passage,\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const botMessage = { sender: 'bot', text: response.data.answer, timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) };\n      setChatHistory([...chatHistory, userMessage, botMessage]);\n    } catch (error) {\n      console.error('Error fetching chatbot response:', error);\n      const errorMessage = { sender: 'bot', text: '요청을 처리하는 중 오류가 발생했습니다.', timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) };\n      setChatHistory([...chatHistory, userMessage, errorMessage]);\n    }\n\n    setChatInput('');\n  };\n\n  const handleSpeakClick = () => {\n    if (isSpeaking) {\n      speechSynthesis.cancel();\n      setIsSpeaking(false);\n    } else {\n      if (chatHistory.length > 0) {\n        const lastBotMessage = chatHistory.filter(msg => msg.sender === 'bot').pop();\n        if (lastBotMessage) {\n          const utterance = new SpeechSynthesisUtterance(lastBotMessage.text);\n          utterance.onend = () => setIsSpeaking(false);\n          speechSynthesis.speak(utterance);\n          setIsSpeaking(true);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chat-icons\">\n        <div className=\"chat-icon\" onClick={toggleChatbot}>\n          <img src={originIcon} alt=\"로봇 이미지\" className=\"robot_img\" />\n        </div>\n        <div className=\"read-icon\" onClick={handleSpeakClick}>\n          <img src={soundIcon} alt=\"읽기 아이콘\" className=\"read_img\" />\n        </div>\n      </div>\n      {isOpen && (\n        <div className=\"chatbot-popup\">\n          <div className=\"chatbot-header\">\n            <img src={botIcon} alt=\"로고\" className=\"logo\" />\n            <span className=\"title\">QUIZZY</span>\n            <button className=\"close\" onClick={toggleChatbot}>\n              <img src={closeIcon} alt=\"종료\" className=\"close\" />\n            </button>\n          </div>\n          <div className=\"chatbot-body\">\n            <div className=\"chat-container\">\n              {chatHistory.map((msg, index) => (\n                <div key={index} className={`message-row ${msg.sender}`}>\n                  <div className={`message-container ${msg.sender === 'user' ? 'user-message' : 'bot-message'}`}>\n                    <div className=\"bubble\">\n                      <div className=\"message-text\">{msg.text}</div>\n                    </div>\n                  </div>\n                  <div className={`timestamp-container ${msg.sender === 'user' ? 'user-timestamp' : 'bot-timestamp'}`}>\n                    <div className=\"timestamp\">{msg.timestamp}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"chat-input-container\">\n              <input\n                type=\"text\"\n                id='search-content'\n                value={chatInput}\n                onChange={handleInputChange}\n                placeholder=\"Type your message here\"\n              />\n              <button onClick={handleSendClick} className=\"send-button\">\n                <img src={searchIcon} alt=\"검색\" className=\"search_icon\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}