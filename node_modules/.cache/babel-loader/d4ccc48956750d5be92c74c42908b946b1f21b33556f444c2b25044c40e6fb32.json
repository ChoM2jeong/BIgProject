{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final\\\\big-1-main\\\\src\\\\components\\\\js\\\\TodayProblem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProblem, setUserAnswer, submitAnswer, setError, fetchFeedback } from '../../redux/actions/todayProblemActions';\nimport { useLocation } from 'react-router-dom';\nimport '../css/TodayProblem.css';\nimport Chatbot from './Chatbot';\nimport axios from 'axios';\nimport timerIcon from '../../logo/timer.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayProblem = () => {\n  _s();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const subjectName = queryParams.get('subject');\n  const {\n    problem,\n    userAnswer,\n    result,\n    error,\n    feedback,\n    isLoading\n  } = useSelector(state => state.todayProblem);\n  const [startTime, setStartTime] = useState(null);\n  const [currentTime, setCurrentTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  useEffect(() => {\n    if (subjectName) {\n      dispatch(fetchProblem(subjectName));\n      const now = Date.now();\n      setStartTime(now);\n      setCurrentTime(now); // 문제를 가져올 때 시작 시간을 기록합니다.\n    }\n  }, [dispatch, subjectName]);\n  useEffect(() => {\n    if (startTime && !endTime) {\n      const timer = setInterval(() => {\n        setCurrentTime(Date.now());\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [startTime, endTime]);\n  const handleChoiceClick = index => {\n    dispatch(setUserAnswer(index));\n  };\n  const handleSubmitAnswer = async () => {\n    if (userAnswer === null) {\n      dispatch(setError('답안을 선택해주세요.'));\n      return;\n    }\n    try {\n      const isCorrect = await dispatch(submitAnswer(problem.q_sub, userAnswer));\n      if (isCorrect) {\n        const endTime = Date.now();\n        const timeTaken = endTime - startTime;\n        setEndTime(endTime);\n\n        // 정답일 경우에만 피드백 요청\n        await axios.post('http://localhost:5000/api/times/record', {\n          userId: 'example_user',\n          questionId: problem.id,\n          timeTaken\n        });\n\n        // GPT에게 문제 풀이 시간 기반 피드백 요청\n        dispatch(fetchFeedback(timeTaken));\n      } else {\n        // 오답일 경우에도 에러 메시지를 설정하여 사용자에게 알려줌\n        // dispatch(setError('오답입니다. 다시 시도해 주세요.'));\n      }\n    } catch (error) {\n      console.error('Error recording time or analyzing:', error);\n      dispatch(setError('피드백을 받아오는 중 오류가 발생했습니다.'));\n    }\n  };\n  const renderPassage = () => {\n    return problem.passage.split('\\n').map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paragraph\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this));\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}분 ${remainingSeconds}초`;\n  };\n  const renderTimeTaken = () => {\n    if (!startTime) return null;\n    const elapsed = Math.floor((currentTime - startTime) / 1000); // 밀리초를 초로 변환\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-taken\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: timerIcon,\n        alt: \"\\uD0C0\\uC774\\uBA38 \\uC544\\uC774\\uCF58\",\n        className: \"timer_img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\uD480\\uC774 \\uC2DC\\uAC04: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \" \", formatTime(elapsed)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today-problem\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC624\\uB298\\uC758 \\uBB38\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"\\uB85C\\uB529 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"passage-container\",\n          children: problem && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"passage\",\n            children: renderPassage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qa-container\",\n          children: [problem && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: problem.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choices\",\n            children: problem && problem.selection.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `choice-label ${userAnswer === index ? 'selected' : ''} ${result === '오답입니다.' && userAnswer === index ? 'incorrect' : ''}`,\n              onClick: () => handleChoiceClick(index),\n              children: choice\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button\",\n            onClick: handleSubmitAnswer,\n            disabled: isLoading,\n            children: \"\\uC81C\\uCD9C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), renderTimeTaken(), \" \", feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Quizzy's \\uD53C\\uB4DC\\uBC31:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 52\n            }, this), \" \", feedback]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `result ${result === '정답입니다!' ? 'correct' : 'incorrect'}`,\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 20\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC624\\uB958:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 42\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-question-button\",\n        onClick: () => {\n          const now = Date.now();\n          setStartTime(now); // 새로운 문제를 풀 때 시작 시간을 기록합니다.\n          setCurrentTime(now); // 현재 시간 초기화\n          setEndTime(null); // 새로운 문제를 풀 때 종료 시간 초기화\n          dispatch(fetchProblem(subjectName));\n        },\n        disabled: isLoading,\n        children: \"\\uB2E4\\uB978\\uBB38\\uC81C\\uD480\\uC5B4\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chatbot, {\n        passage: problem ? problem.passage : '',\n        question: problem ? problem.question : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(TodayProblem, \"uo9Lt1xAM+u9ibakNIk2QB5cabc=\", false, function () {\n  return [useDispatch, useLocation, useSelector];\n});\n_c = TodayProblem;\nexport default TodayProblem;\nvar _c;\n$RefreshReg$(_c, \"TodayProblem\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","fetchProblem","setUserAnswer","submitAnswer","setError","fetchFeedback","useLocation","Chatbot","axios","timerIcon","jsxDEV","_jsxDEV","TodayProblem","_s","dispatch","location","queryParams","URLSearchParams","search","subjectName","get","problem","userAnswer","result","error","feedback","isLoading","state","todayProblem","startTime","setStartTime","currentTime","setCurrentTime","endTime","setEndTime","now","Date","timer","setInterval","clearInterval","handleChoiceClick","index","handleSubmitAnswer","isCorrect","q_sub","timeTaken","post","userId","questionId","id","console","renderPassage","passage","split","map","paragraph","children","fileName","_jsxFileName","lineNumber","columnNumber","formatTime","seconds","minutes","Math","floor","remainingSeconds","renderTimeTaken","elapsed","className","src","alt","question","selection","choice","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final/big-1-main/src/components/js/TodayProblem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProblem, setUserAnswer, submitAnswer, setError, fetchFeedback } from '../../redux/actions/todayProblemActions';\nimport { useLocation } from 'react-router-dom';\nimport '../css/TodayProblem.css';\nimport Chatbot from './Chatbot';\nimport axios from 'axios';\n\nimport timerIcon from '../../logo/timer.png';\n\nconst TodayProblem = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const subjectName = queryParams.get('subject');\n\n  const { problem, userAnswer, result, error, feedback, isLoading } = useSelector((state) => state.todayProblem);\n  const [startTime, setStartTime] = useState(null);\n  const [currentTime, setCurrentTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n\n  useEffect(() => {\n    if (subjectName) {\n      dispatch(fetchProblem(subjectName));\n      const now = Date.now();\n      setStartTime(now);\n      setCurrentTime(now); // 문제를 가져올 때 시작 시간을 기록합니다.\n    }\n  }, [dispatch, subjectName]);\n\n  useEffect(() => {\n    if (startTime && !endTime) {\n      const timer = setInterval(() => {\n        setCurrentTime(Date.now());\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [startTime, endTime]);\n\n  const handleChoiceClick = (index) => {\n    dispatch(setUserAnswer(index));\n  };\n\n  const handleSubmitAnswer = async () => {\n    if (userAnswer === null) {\n      dispatch(setError('답안을 선택해주세요.'));\n      return;\n    }\n\n    try {\n      const isCorrect = await dispatch(submitAnswer(problem.q_sub, userAnswer));\n      if (isCorrect) {\n        const endTime = Date.now();\n        const timeTaken = endTime - startTime;\n        setEndTime(endTime);\n\n        // 정답일 경우에만 피드백 요청\n        await axios.post('http://localhost:5000/api/times/record', {\n          userId: 'example_user',\n          questionId: problem.id,\n          timeTaken\n        });\n\n        // GPT에게 문제 풀이 시간 기반 피드백 요청\n        dispatch(fetchFeedback(timeTaken));\n      } else {\n        // 오답일 경우에도 에러 메시지를 설정하여 사용자에게 알려줌\n        // dispatch(setError('오답입니다. 다시 시도해 주세요.'));\n      }\n    } catch (error) {\n      console.error('Error recording time or analyzing:', error);\n      dispatch(setError('피드백을 받아오는 중 오류가 발생했습니다.'));\n    }\n  };\n\n  const renderPassage = () => {\n    return problem.passage.split('\\n').map((paragraph, index) => (\n      <p key={index}>{paragraph}</p>\n    ));\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}분 ${remainingSeconds}초`;\n  };\n\n  const renderTimeTaken = () => {\n    if (!startTime) return null;\n    const elapsed = Math.floor((currentTime - startTime) / 1000); // 밀리초를 초로 변환\n    return (\n      <div className=\"time-taken\">\n        <img src={timerIcon} alt=\"타이머 아이콘\" className=\"timer_img\" />\n        <strong>풀이 시간: </strong> {formatTime(elapsed)}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"today-problem\">\n        <h1>오늘의 문제</h1>\n        <div className=\"content\">\n          {isLoading && <div className=\"loading\">로딩 중...</div>}\n          <div className=\"passage-container\">\n            {problem && <div className=\"passage\">{renderPassage()}</div>}\n          </div>\n          <div className=\"qa-container\">\n            {problem && <p>{problem.question}</p>}\n            <div className=\"choices\">\n              {problem &&\n                problem.selection.map((choice, index) => (\n                  <div\n                    key={index}\n                    className={`choice-label ${userAnswer === index ? 'selected' : ''} ${\n                      result === '오답입니다.' && userAnswer === index ? 'incorrect' : ''\n                    }`}\n                    onClick={() => handleChoiceClick(index)}\n                  >\n                    {choice}\n                  </div>\n                ))}\n            </div>\n            <button className=\"submit-button\" onClick={handleSubmitAnswer} disabled={isLoading}>제출</button>\n            {renderTimeTaken()} {/* 풀이 시간을 제출 버튼 바로 밑으로 이동 */}\n            {feedback && <div className=\"feedback\"><strong>Quizzy's 피드백:</strong> {feedback}</div>}\n          </div>\n        </div>\n        {result && <div className={`result ${result === '정답입니다!' ? 'correct' : 'incorrect'}`}>{result}</div>}\n        {error && <div className=\"error\"><strong>오류:</strong> {error}</div>}\n        \n        <button className=\"new-question-button\" onClick={() => {\n          const now = Date.now();\n          setStartTime(now); // 새로운 문제를 풀 때 시작 시간을 기록합니다.\n          setCurrentTime(now); // 현재 시간 초기화\n          setEndTime(null); // 새로운 문제를 풀 때 종료 시간 초기화\n          dispatch(fetchProblem(subjectName));\n        }} disabled={isLoading}>다른문제풀어보기</button>\n        <Chatbot passage={problem ? problem.passage : ''} question={problem ? problem.question : ''} />\n      </div>\n    </div>\n  );\n};\n\nexport default TodayProblem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}