{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final\\\\big-1-main\\\\src\\\\components\\\\js\\\\Speaker.js\",\n  _s = $RefreshSig$();\n// soundIcon 클릭으로 읽기 모드 ON/OFF 전환\n// 읽기 모드 ON 상태 일 때 커서 조작 시 해당 텍스트 TTS 기능 추가 코드\nimport React, { useState, useEffect } from 'react';\nimport soundIcon from '../../logo/sound_logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Speaker_Button = () => {\n  _s();\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isEnabled, setIsEnabled] = useState('');\n  useEffect(() => {\n    const handleMouseEnter = event => {\n      if (isEnabled) {\n        const text = event.target.innerText || event.target.alt;\n        if (text) {\n          const utterance = new SpeechSynthesisUtterance(text);\n          utterance.lang = 'ko-KR';\n          window.speechSynthesis.speak(utterance);\n          setIsSpeaking(true);\n          utterance.onend = () => {\n            setIsSpeaking(false);\n          };\n        }\n      }\n    };\n    const handleMouseLeave = () => {\n      if (isSpeaking) {\n        window.speechSynthesis.cancel();\n        setIsSpeaking(false);\n      }\n    };\n    document.addEventListener('mouseenter', handleMouseEnter, true);\n    document.addEventListener('mouseleave', handleMouseLeave, true);\n    return () => {\n      document.removeEventListener('mouseenter', handleMouseEnter, true);\n      document.removeEventListener('mouseleave', handleMouseLeave, true);\n    };\n  }, [isEnabled, isSpeaking]);\n  const toggleEnable = () => {\n    setIsEnabled(!isEnabled);\n    if (isSpeaking) {\n      window.speechSynthesis.cancel();\n      setIsSpeaking(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"icon-button\",\n    onClick: toggleEnable,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: soundIcon,\n      alt: \"sound-icon\",\n      className: `sound-icon ${isEnabled ? 'active' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Speaker_Button, \"bREtJlsoTCwKO3kPLglsfJJsrTA=\");\n_c = Speaker_Button;\nexport default Speaker_Button;\nvar _c;\n$RefreshReg$(_c, \"Speaker_Button\");","map":{"version":3,"names":["React","useState","useEffect","soundIcon","jsxDEV","_jsxDEV","Speaker_Button","_s","isSpeaking","setIsSpeaking","isEnabled","setIsEnabled","handleMouseEnter","event","text","target","innerText","alt","utterance","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","onend","handleMouseLeave","cancel","document","addEventListener","removeEventListener","toggleEnable","className","onClick","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final/big-1-main/src/components/js/Speaker.js"],"sourcesContent":["// soundIcon 클릭으로 읽기 모드 ON/OFF 전환\n// 읽기 모드 ON 상태 일 때 커서 조작 시 해당 텍스트 TTS 기능 추가 코드\nimport React, { useState, useEffect } from 'react';\nimport soundIcon from '../../logo/sound_logo.png';\n\nconst Speaker_Button = () => {\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isEnabled, setIsEnabled] = useState('');\n\n  useEffect(() => {\n    const handleMouseEnter=(event) => {\n        if (isEnabled){\n            const text = event.target.innerText || event.target.alt;\n            if (text) {\n                const utterance = new SpeechSynthesisUtterance(text);\n                utterance.lang = 'ko-KR';\n                window.speechSynthesis.speak(utterance);\n                setIsSpeaking(true);\n\n                utterance.onend = () => {\n                    setIsSpeaking(false);\n                };\n            }\n        }\n    };\n\n    const handleMouseLeave = () => {\n        if (isSpeaking) {\n            window.speechSynthesis.cancel();\n            setIsSpeaking(false);\n        }\n    };\n\n    document.addEventListener('mouseenter', handleMouseEnter, true);\n    document.addEventListener('mouseleave', handleMouseLeave, true);\n\n    return () => {\n        document.removeEventListener('mouseenter', handleMouseEnter, true);\n        document.removeEventListener('mouseleave', handleMouseLeave, true);\n    };\n}, [isEnabled, isSpeaking]);\n\n    const toggleEnable = () => {\n        setIsEnabled(!isEnabled);\n        if (isSpeaking){\n            window.speechSynthesis.cancel();\n            setIsSpeaking(false);\n        }\n    };\n\n    return (\n        <button className='icon-button' onClick={toggleEnable}>\n            <img src={soundIcon} alt='sound-icon'  className={`sound-icon ${isEnabled ? 'active' : ''}`} />\n        </button>\n    );\n};\n\nexport default Speaker_Button;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAEC,KAAK,IAAK;MAC9B,IAAIH,SAAS,EAAC;QACV,MAAMI,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,SAAS,IAAIH,KAAK,CAACE,MAAM,CAACE,GAAG;QACvD,IAAIH,IAAI,EAAE;UACN,MAAMI,SAAS,GAAG,IAAIC,wBAAwB,CAACL,IAAI,CAAC;UACpDI,SAAS,CAACE,IAAI,GAAG,OAAO;UACxBC,MAAM,CAACC,eAAe,CAACC,KAAK,CAACL,SAAS,CAAC;UACvCT,aAAa,CAAC,IAAI,CAAC;UAEnBS,SAAS,CAACM,KAAK,GAAG,MAAM;YACpBf,aAAa,CAAC,KAAK,CAAC;UACxB,CAAC;QACL;MACJ;IACJ,CAAC;IAED,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;MAC3B,IAAIjB,UAAU,EAAE;QACZa,MAAM,CAACC,eAAe,CAACI,MAAM,CAAC,CAAC;QAC/BjB,aAAa,CAAC,KAAK,CAAC;MACxB;IACJ,CAAC;IAEDkB,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAEhB,gBAAgB,EAAE,IAAI,CAAC;IAC/De,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAEH,gBAAgB,EAAE,IAAI,CAAC;IAE/D,OAAO,MAAM;MACTE,QAAQ,CAACE,mBAAmB,CAAC,YAAY,EAAEjB,gBAAgB,EAAE,IAAI,CAAC;MAClEe,QAAQ,CAACE,mBAAmB,CAAC,YAAY,EAAEJ,gBAAgB,EAAE,IAAI,CAAC;IACtE,CAAC;EACL,CAAC,EAAE,CAACf,SAAS,EAAEF,UAAU,CAAC,CAAC;EAEvB,MAAMsB,YAAY,GAAGA,CAAA,KAAM;IACvBnB,YAAY,CAAC,CAACD,SAAS,CAAC;IACxB,IAAIF,UAAU,EAAC;MACXa,MAAM,CAACC,eAAe,CAACI,MAAM,CAAC,CAAC;MAC/BjB,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAQ0B,SAAS,EAAC,aAAa;IAACC,OAAO,EAAEF,YAAa;IAAAG,QAAA,eAClD5B,OAAA;MAAK6B,GAAG,EAAE/B,SAAU;MAACc,GAAG,EAAC,YAAY;MAAEc,SAAS,EAAE,cAAcrB,SAAS,GAAG,QAAQ,GAAG,EAAE;IAAG;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3F,CAAC;AAEjB,CAAC;AAAC/B,EAAA,CAlDID,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAoDpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}