{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final\\\\front\\\\src\\\\components\\\\js\\\\CommentDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Cookies } from 'react-cookie';\nimport axios from 'axios';\nimport user from '../../logo/user_logo2.png';\nimport { commentDate } from '../../redux/actions/postActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentDetail = ({\n  id,\n  author,\n  content,\n  date\n}) => {\n  _s();\n  const [isMyComment, setIsMyComment] = useState(false);\n  const cookies = new Cookies();\n  const jwtToken = cookies.get('Authorization');\n  const fetchisMyComment = async () => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    try {\n      const response = await axios.get(`http://localhost:8080/comment/${id}/isMyComment`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      const isMyComment = response.data; // 서버에서 true 또는 false 값을 받아옴\n\n      if (isMyComment === true) {\n        setIsMyComment(true);\n      } else {\n        setIsMyComment(false);\n      }\n    } catch (error) {\n      setIsMyComment(false); // 오류가 발생한 경우 기본적으로 false로 설정\n    }\n  };\n  useEffect(() => {\n    if (jwtToken) {\n      fetchisMyComment();\n    }\n  }, [jwtToken]);\n  const handleDeleteComment = async () => {\n    if (window.confirm(\"정말 댓글을 삭제하시겠습니까?\")) {\n      const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n      await axios.delete(`http://localhost:8080/comment/delete/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': jwtToken\n        }\n      });\n      window.location.reload();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-author-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user,\n          alt: \"comment-user-icon\",\n          className: \"comment-user-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-author\",\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"comment-date\",\n        children: commentDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-content\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isMyComment ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteComment,\n      className: \"delete-comment-button\",\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentDetail, \"LWDKH39JwLEtsOdmAWAHJ7T4rLM=\");\n_c = CommentDetail;\nexport default CommentDetail;\nvar _c;\n$RefreshReg$(_c, \"CommentDetail\");","map":{"version":3,"names":["React","useEffect","useState","Cookies","axios","user","commentDate","jsxDEV","_jsxDEV","CommentDetail","id","author","content","date","_s","isMyComment","setIsMyComment","cookies","jwtToken","get","fetchisMyComment","bearerToken","startsWith","response","headers","data","error","handleDeleteComment","window","confirm","delete","location","reload","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final/front/src/components/js/CommentDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Cookies } from 'react-cookie';\r\nimport axios from 'axios';\r\nimport user from '../../logo/user_logo2.png';\r\nimport { commentDate } from '../../redux/actions/postActions';\r\n\r\nconst CommentDetail = ({ id,author,content,date }) =>{\r\n  const [isMyComment, setIsMyComment] = useState(false);\r\n\r\n  const cookies = new Cookies();\r\n  const jwtToken = cookies.get('Authorization');\r\n\r\n  const fetchisMyComment = async () => {\r\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\r\n\r\n    try {\r\n      const response = await axios.get(`http://localhost:8080/comment/${id}/isMyComment`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': bearerToken,\r\n        },\r\n      });\r\n  \r\n      const isMyComment = response.data; // 서버에서 true 또는 false 값을 받아옴\r\n  \r\n      if (isMyComment === true) {\r\n       \r\n        setIsMyComment(true);\r\n      } else {\r\n        setIsMyComment(false);\r\n      }\r\n    } catch (error) {\r\n     \r\n      setIsMyComment(false); // 오류가 발생한 경우 기본적으로 false로 설정\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n      if(jwtToken){\r\n          fetchisMyComment();\r\n      }\r\n    }, [jwtToken]);\r\n\r\n  const handleDeleteComment = async() => {\r\n    if(window.confirm(\"정말 댓글을 삭제하시겠습니까?\")){\r\n      const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\r\n\r\n      await axios.delete(`http://localhost:8080/comment/delete/${id}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': jwtToken,\r\n        },\r\n      });\r\n      window.location.reload();\r\n    \r\n    }\r\n    \r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <li className=\"comment\">\r\n      <div className=\"comment-left\">\r\n        <div className=\"comment-author-container\">\r\n          <img src={user} alt=\"comment-user-icon\" className=\"comment-user-icon\" />\r\n          <span className=\"comment-author\">{author}</span>\r\n        </div>\r\n        <span className=\"comment-date\">{commentDate(date)}</span>\r\n        <p className='comment-content'>{content}</p>\r\n      </div>\r\n      {isMyComment ? (\r\n        <button onClick={handleDeleteComment} className=\"delete-comment-button\">삭제</button>\r\n      ) : null}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CommentDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}