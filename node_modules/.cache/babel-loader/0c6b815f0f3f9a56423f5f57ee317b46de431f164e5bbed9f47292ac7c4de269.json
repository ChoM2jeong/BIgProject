{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final\\\\big-1-main\\\\src\\\\components\\\\js\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Cookies } from 'react-cookie';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element: Element,\n  ...rest\n}) => {\n  _s();\n  const isLoggedIn = true;\n  const navigate = useNavigate();\n  const cookies = new Cookies();\n  const jwtToken = cookies.get('Authorization');\n  useEffect(() => {\n    if (!jwtToken) {\n      alert('로그인을 해야 이용가능합니다.');\n      window.location.replace('/');\n      return;\n    }\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    try {\n      const response = axios.get(`http://localhost:8080/member/check/jwt`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error('Invalid token:', error);\n      alert('유효하지 않은 토큰입니다. 다시 로그인해주세요.');\n      cookies.remove('Authorization');\n      window.location.replace('/');\n    }\n  }, [jwtToken]);\n\n  // JWT가 유효하지 않은 경우 null 반환\n  if (!jwtToken) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Element, {\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useEffect","useNavigate","Cookies","axios","useSelector","jsxDEV","_jsxDEV","PrivateRoute","element","Element","rest","_s","isLoggedIn","navigate","cookies","jwtToken","get","alert","window","location","replace","bearerToken","startsWith","response","headers","console","log","data","error","remove","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final/big-1-main/src/components/js/PrivateRoute.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Cookies } from 'react-cookie';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nconst PrivateRoute = ({ element: Element, ...rest }) => {\n  const isLoggedIn = true;\n  const navigate = useNavigate();\n  \n  const cookies = new Cookies();\n  const jwtToken = cookies.get('Authorization');\n\n\n  useEffect(() => {\n    if (!jwtToken) {\n      alert('로그인을 해야 이용가능합니다.');\n      window.location.replace('/');\n      return;\n    }\n\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;  \n\n    try {\n      \n\n      const response = axios.get(`http://localhost:8080/member/check/jwt`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken,\n        },\n      });\n      console.log(response.data)\n\n    } catch (error) {\n      console.error('Invalid token:', error);\n      alert('유효하지 않은 토큰입니다. 다시 로그인해주세요.');\n      cookies.remove('Authorization');\n      window.location.replace('/');\n    }\n  }, [jwtToken]);\n\n  // JWT가 유효하지 않은 경우 null 반환\n  if (!jwtToken) {\n    return null;\n  }\n\n\n\n  return <Element {...rest} />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,cAAc;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO,EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAMC,UAAU,GAAG,IAAI;EACvB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,OAAO,GAAG,IAAIZ,OAAO,CAAC,CAAC;EAC7B,MAAMa,QAAQ,GAAGD,OAAO,CAACE,GAAG,CAAC,eAAe,CAAC;EAG7ChB,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,QAAQ,EAAE;MACbE,KAAK,CAAC,kBAAkB,CAAC;MACzBC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,GAAG,CAAC;MAC5B;IACF;IAEA,MAAMC,WAAW,GAAGN,QAAQ,CAACO,UAAU,CAAC,SAAS,CAAC,GAAGP,QAAQ,GAAG,UAAUA,QAAQ,EAAE;IAEpF,IAAI;MAGF,MAAMQ,QAAQ,GAAGpB,KAAK,CAACa,GAAG,CAAC,wCAAwC,EAAE;QACnEQ,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAEH;QACnB;MACF,CAAC,CAAC;MACFI,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAE5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCX,KAAK,CAAC,4BAA4B,CAAC;MACnCH,OAAO,CAACe,MAAM,CAAC,eAAe,CAAC;MAC/BX,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,GAAG,CAAC;IAC9B;EACF,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;;EAEd;EACA,IAAI,CAACA,QAAQ,EAAE;IACb,OAAO,IAAI;EACb;EAIA,oBAAOT,OAAA,CAACG,OAAO;IAAA,GAAKC;EAAI;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC9B,CAAC;AAACtB,EAAA,CA5CIJ,YAAY;EAAA,QAECN,WAAW;AAAA;AAAAiC,EAAA,GAFxB3B,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}