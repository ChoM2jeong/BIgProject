{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final\\\\big-1-main\\\\src\\\\components\\\\js\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePost, deletePost, commentDate } from '../../redux/actions/postActions';\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport BeforeLikeIcon from '../../logo/beforelike_logo.png';\nimport LikedIcon from '../../logo/liked_logo.png';\nimport Header from './Header';\nimport '../css/PostDetail.css';\nimport { formatDate } from '../../redux/actions/postActions';\nimport CommentDetail from './CommentDetail';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const postId = parseInt(id, 10);\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const post = posts.find(post => post.id === postId);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isMyBoard, setIsMyBoard] = useState(false);\n  const [category, setCategory] = useState('');\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [Date, setDate] = useState('');\n  const [newComment, setNewComment] = useState('');\n  const [comments, setComments] = useState([]);\n  const [likes, setLikes] = useState(0);\n  const [isLiked, setIsLiked] = useState(false);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const cookies = new Cookies();\n  const jwtToken = cookies.get('Authorization');\n  const fetchPost = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/board/${id}`);\n      const data = response.data;\n      setName(data.name);\n      setTitle(data.title);\n      setContent(data.content);\n      setComments(data.comments);\n      setDate(data.createdDate);\n      setLikes(data.likes);\n      setCategory(data.category);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const fetchisMyBoard = async () => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    try {\n      const response = await axios.get(`http://localhost:8080/board/${id}/isMyBoard`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      console.log(\"본인 게시글임\");\n      setIsMyBoard(true);\n    } catch (error) {\n      setIsMyBoard(false);\n    }\n  };\n  const fetchisMyLike = async () => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    try {\n      const response = await axios.get(`http://localhost:8080/BoardLike/${id}/isMyLike`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      const isMyLike = response.data; // 서버에서 true 또는 false 값을 받아옴\n\n      if (isMyLike === true) {\n        setIsLiked(true);\n      } else {\n        setIsLiked(false);\n      }\n    } catch (error) {\n      setIsLiked(false);\n    }\n  };\n  useEffect(() => {\n    fetchPost();\n    if (jwtToken) {\n      fetchisMyBoard();\n      fetchisMyLike();\n    }\n  }, [jwtToken]);\n  const handleUpdate = async e => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    if (window.confirm(\"정말 수정하시겠습니까?\")) {\n      const data = {\n        'title': title,\n        'content': content\n      };\n      await axios.put(`http://localhost:8080/board/update/${id}`, data, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      window.location.reload();\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n      await axios.delete(`http://localhost:8080/board/delete/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      window.location.replace(`http://localhost:3000/community/${category}`);\n    }\n  };\n  const handleAddComment = async () => {\n    const addcomment = {\n      'content': newComment\n    };\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    try {\n      const response = await axios.post(`http://localhost:8080/comment/${id}/save`, addcomment, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error saving comment:\", error);\n    }\n  };\n  const handleDeleteComment = commentIndex => {\n    const updatedComments = comments.filter((_, index) => index !== commentIndex);\n    setComments(updatedComments);\n    dispatch(updatePost(post.id, {\n      ...post,\n      comments: updatedComments\n    }));\n  };\n  const handleToggleLike = async () => {\n    if (jwtToken == undefined) {\n      alert(\"로그인 하시길 바랍니다\");\n      return;\n    }\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    try {\n      const response = await axios.post(`http://localhost:8080/BoardLike/SaveDelete/${id}`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      const newLikes = isLiked ? likes - 1 : likes + 1;\n      setLikes(newLikes);\n      setIsLiked(!isLiked);\n    } catch (error) {\n      console.error(\"Error saving 좋아요\", error);\n    }\n  };\n\n  // if (!post) {\n  //   return <div>게시물을 찾을 수 없습니다.</div>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"article\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"article-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"article-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            title: \"\\uC81C\\uBAA9\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category\",\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatDate(Date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uC88B\\uC544\\uC694 \\uC218: \", likes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleToggleLike,\n            className: `like-button ${isLiked ? 'liked' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: isLiked ? LikedIcon : BeforeLikeIcon,\n              alt: \"like button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        className: \"post-detail-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            children: \"\\uB0B4\\uC6A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"content\",\n            value: content,\n            onChange: e => setContent(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editting-contents\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"\\uC218\\uC815 \\uC644\\uB8CC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [content.split('\\n').map((paragraph, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: paragraph\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this)), isMyBoard ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsEditing(true),\n            className: \"edit-button\",\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            className: \"delete-button\",\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reply\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply-count\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"\\uB313\\uAE00 \", comments.length, \"\\uAC1C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"comments_info\",\n          children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(CommentDetail, {\n            id: comment.id,\n            author: comment.author,\n            content: comment.content,\n            date: comment.createdDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: newComment,\n            onChange: e => setNewComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddComment,\n            className: \"reply-submit-button\",\n            children: \"\\uB4F1\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 14\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetail, \"hIrIK+Iiwthm9LdsPybpMx1hGa8=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useSelector","useDispatch","updatePost","deletePost","commentDate","axios","Cookies","BeforeLikeIcon","LikedIcon","Header","formatDate","CommentDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","PostDetail","_s","id","postId","parseInt","dispatch","posts","state","post","find","isEditing","setIsEditing","isMyBoard","setIsMyBoard","category","setCategory","name","setName","title","setTitle","content","setContent","Date","setDate","newComment","setNewComment","comments","setComments","likes","setLikes","isLiked","setIsLiked","isLoggedIn","auth","cookies","jwtToken","get","fetchPost","response","data","createdDate","error","console","fetchisMyBoard","bearerToken","startsWith","headers","log","fetchisMyLike","isMyLike","handleUpdate","e","window","confirm","put","location","reload","handleDelete","delete","replace","handleAddComment","addcomment","handleDeleteComment","commentIndex","updatedComments","filter","_","index","handleToggleLike","undefined","alert","newLikes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","onSubmit","htmlFor","type","value","onChange","target","required","split","map","paragraph","idx","length","comment","author","date","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final/big-1-main/src/components/js/PostDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePost, deletePost, commentDate } from '../../redux/actions/postActions';\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport BeforeLikeIcon from '../../logo/beforelike_logo.png';\nimport LikedIcon from '../../logo/liked_logo.png';\nimport Header from './Header';\nimport '../css/PostDetail.css';\nimport { formatDate } from '../../redux/actions/postActions';\nimport CommentDetail from './CommentDetail';\n\nconst PostDetail = () => {\n  const { id } = useParams();\n  const postId = parseInt(id, 10);\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts.posts);\n  const post = posts.find((post) => post.id === postId);\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [isMyBoard, setIsMyBoard] = useState(false);\n  const [category, setCategory] = useState('');\n  const [name , setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [Date, setDate] = useState('');\n  const [newComment, setNewComment] = useState('');\n  const [comments, setComments] = useState([]);\n  const [likes, setLikes] = useState(0);\n  const [isLiked, setIsLiked] = useState(false);\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n\n  const cookies = new Cookies();\n  const jwtToken = cookies.get('Authorization');\n\n  const fetchPost = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/board/${id}`);\n      const data = response.data;\n      \n      setName(data.name);\n      setTitle(data.title);\n      setContent(data.content);\n      setComments(data.comments);\n      setDate(data.createdDate);\n      setLikes(data.likes);\n      setCategory(data.category);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  const fetchisMyBoard = async () => {\n      const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;  \n\n      try{\n        const response = await axios.get(`http://localhost:8080/board/${id}/isMyBoard`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': bearerToken,\n          },\n        });\n        console.log(\"본인 게시글임\")\n        setIsMyBoard(true);\n      }catch(error){\n        \n        setIsMyBoard(false);\n      }\n  }\n  \n  const fetchisMyLike = async () => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;  \n\n    try{\n      const response = await axios.get(`http://localhost:8080/BoardLike/${id}/isMyLike`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken,\n        },\n      });\n      const isMyLike = response.data; // 서버에서 true 또는 false 값을 받아옴\n    \n      if (isMyLike === true) {\n       \n        setIsLiked(true);\n      } else {\n        setIsLiked(false);\n      }\n    }catch(error){\n      \n      setIsLiked(false);\n    }\n  }\n\n\n\n  useEffect(() => {\n    fetchPost();\n    \n    if(jwtToken){\n      fetchisMyBoard();\n      fetchisMyLike();\n    }\n  }, [jwtToken]);\n\n  const handleUpdate = async (e) => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n\n    if(window.confirm(\"정말 수정하시겠습니까?\")){\n      const data = {\n        'title' : title,\n        'content' : content\n      };\n      await axios.put(`http://localhost:8080/board/update/${id}`,data, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken,\n        },\n      });\n      window.location.reload();\n    \n    }\n  };\n\n  const handleDelete =async () => {\n    if(window.confirm(\"정말 삭제하시겠습니까?\")){\n      const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n\n      await axios.delete(`http://localhost:8080/board/delete/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken,\n        },\n      });\n      window.location.replace(`http://localhost:3000/community/${category}`);\n    \n    }\n  };\n\n  const handleAddComment = async() => {\n    const addcomment = {  \n      'content': newComment\n    };\n    \n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n\n    try {\n      const response = await axios.post(`http://localhost:8080/comment/${id}/save`, addcomment, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken,\n        },\n      });\n      \n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error saving comment:\", error);\n    }\n  };\n\n  const handleDeleteComment = (commentIndex) => {\n    const updatedComments = comments.filter((_, index) => index !== commentIndex);\n    setComments(updatedComments);\n    dispatch(updatePost(post.id, { ...post, comments: updatedComments }));\n  };\n\n  const handleToggleLike = async() => {\n    if(jwtToken==undefined){\n      alert(\"로그인 하시길 바랍니다\");\n      return;\n    }\n\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    try {\n      const response = await axios.post(`http://localhost:8080/BoardLike/SaveDelete/${id}`, {},{\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken,\n        },\n      }); \n      const newLikes = isLiked ? likes - 1 : likes + 1;\n      setLikes(newLikes);\n      setIsLiked(!isLiked);\n      \n    } catch (error) {\n      console.error(\"Error saving 좋아요\", error);\n    }\n  };\n\n  // if (!post) {\n  //   return <div>게시물을 찾을 수 없습니다.</div>;\n  // }\n\n  return (\n    <div className='post-detail'>\n      {/* <Header /> */}\n      <article className='article'>\n        <div className=\"article-top\">\n          <div className=\"article-header\">\n            <h1 title='제목'>{title}</h1>\n            <div className='category'>{category}</div>\n          </div>\n          <div className=\"post-meta\">\n            <span>{name}</span>\n            <span>{formatDate(Date)}</span>\n            <span>좋아요 수: {likes}</span>\n            <button onClick={handleToggleLike} className={`like-button ${isLiked ? 'liked' : ''}`}>\n              <img src={isLiked ? LikedIcon : BeforeLikeIcon} alt=\"like button\" />\n            </button>\n          </div>\n        </div>\n        {isEditing ? (\n          <form onSubmit={handleUpdate} className=\"post-detail-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">제목</label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"content\">내용</label>\n              <textarea\n                id=\"content\"\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n                required\n              ></textarea>\n            </div>\n            <div className='editting-contents'>\n              <button type=\"submit\" className=\"submit-button\">수정 완료</button>\n            </div>\n          </form>\n        ) : (\n          <div className=\"post-content\">\n            {content.split('\\n').map((paragraph, idx) => (\n              <p key={idx}>{paragraph}</p>\n            ))}\n            {isMyBoard?\n              (<div className=\"button-container\">\n                <button onClick={() => setIsEditing(true)} className=\"edit-button\">수정</button>\n                <button onClick={handleDelete} className=\"delete-button\">삭제</button>\n              </div>):(\n                <div></div>\n              )\n            }\n          </div>\n        )}\n      </article>\n      <div className='reply'>\n        <div className=\"reply-form-container\">\n          <div className=\"reply-count\">\n            <h2>댓글 {comments.length}개</h2>\n            \n          </div>\n        </div>\n        <div className='reply-content'>\n          <ul className=\"comments_info\">\n            {comments.map((comment, index) => (\n              <CommentDetail\n              id={comment.id}\n              author={comment.author}\n              content={comment.content}\n              date={comment.createdDate}\n            />\n            ))}\n          </ul>\n          <div className=\"reply-form\">\n            <textarea\n              placeholder=\"댓글을 입력하세요\"\n              value={newComment}\n              onChange={(e) => setNewComment(e.target.value)}\n            ></textarea>\n            {isLoggedIn?\n            (<button onClick={handleAddComment} className=\"reply-submit-button\">등록</button>):(<></>)}\n          </div>\n            \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}