{"ast":null,"code":"import { FETCH_PROBLEM_REQUEST, FETCH_PROBLEM_SUCCESS, FETCH_PROBLEM_FAILURE, SUBMIT_ANSWER_REQUEST, SUBMIT_ANSWER_SUCCESS, SUBMIT_ANSWER_FAILURE, SET_USER_ANSWER, SET_ERROR, SET_FEEDBACK // 새로 추가된 액션 타입\n} from '../actions/todayProblemActions';\nconst initialState = {\n  isLoading: false,\n  problem: null,\n  userAnswer: null,\n  result: '',\n  error: '',\n  feedback: '' // 초기 상태에 feedback 추가\n};\nconst todayProblemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_PROBLEM_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        error: '',\n        feedback: '' // 새로운 문제를 불러올 때 피드백 초기화\n      };\n    case FETCH_PROBLEM_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        problem: action.payload,\n        userAnswer: null,\n        result: '',\n        error: '',\n        feedback: '' // 새로운 문제를 불러올 때 피드백 초기화\n      };\n    case FETCH_PROBLEM_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case SUBMIT_ANSWER_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        error: ''\n      };\n    case SUBMIT_ANSWER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        result: action.payload ? '정답입니다!' : '오답입니다.',\n        error: ''\n      };\n    case SUBMIT_ANSWER_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case SET_USER_ANSWER:\n      return {\n        ...state,\n        userAnswer: action.payload,\n        result: '',\n        error: ''\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case SET_FEEDBACK:\n      // 피드백 상태 업데이트\n      return {\n        ...state,\n        feedback: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default todayProblemReducer;","map":{"version":3,"names":["FETCH_PROBLEM_REQUEST","FETCH_PROBLEM_SUCCESS","FETCH_PROBLEM_FAILURE","SUBMIT_ANSWER_REQUEST","SUBMIT_ANSWER_SUCCESS","SUBMIT_ANSWER_FAILURE","SET_USER_ANSWER","SET_ERROR","SET_FEEDBACK","initialState","isLoading","problem","userAnswer","result","error","feedback","todayProblemReducer","state","action","type","payload"],"sources":["C:/Users/User/Desktop/final/big-1-main/src/redux/reducers/todayProblemReducer.js"],"sourcesContent":["import {\n  FETCH_PROBLEM_REQUEST,\n  FETCH_PROBLEM_SUCCESS,\n  FETCH_PROBLEM_FAILURE,\n  SUBMIT_ANSWER_REQUEST,\n  SUBMIT_ANSWER_SUCCESS,\n  SUBMIT_ANSWER_FAILURE,\n  SET_USER_ANSWER,\n  SET_ERROR,\n  SET_FEEDBACK // 새로 추가된 액션 타입\n} from '../actions/todayProblemActions';\n\nconst initialState = {\n  isLoading: false,\n  problem: null,\n  userAnswer: null,\n  result: '',\n  error: '',\n  feedback: '' // 초기 상태에 feedback 추가\n};\n\nconst todayProblemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_PROBLEM_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        error: '',\n        feedback: '' // 새로운 문제를 불러올 때 피드백 초기화\n      };\n    case FETCH_PROBLEM_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        problem: action.payload,\n        userAnswer: null,\n        result: '',\n        error: '',\n        feedback: '' // 새로운 문제를 불러올 때 피드백 초기화\n      };\n    case FETCH_PROBLEM_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case SUBMIT_ANSWER_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        error: ''\n      };\n    case SUBMIT_ANSWER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        result: action.payload ? '정답입니다!' : '오답입니다.',\n        error: ''\n      };\n    case SUBMIT_ANSWER_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    case SET_USER_ANSWER:\n      return {\n        ...state,\n        userAnswer: action.payload,\n        result: '',\n        error: ''\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case SET_FEEDBACK: // 피드백 상태 업데이트\n      return {\n        ...state,\n        feedback: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todayProblemReducer;\n"],"mappings":"AAAA,SACEA,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,eAAe,EACfC,SAAS,EACTC,YAAY,CAAC;AAAA,OACR,gCAAgC;AAEvC,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,IAAI;EACbC,UAAU,EAAE,IAAI;EAChBC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE,CAAC;AACf,CAAC;AAED,MAAMC,mBAAmB,GAAGA,CAACC,KAAK,GAAGR,YAAY,EAAES,MAAM,KAAK;EAC5D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKnB,qBAAqB;MACxB,OAAO;QACL,GAAGiB,KAAK;QACRP,SAAS,EAAE,IAAI;QACfI,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE,CAAC;MACf,CAAC;IACH,KAAKd,qBAAqB;MACxB,OAAO;QACL,GAAGgB,KAAK;QACRP,SAAS,EAAE,KAAK;QAChBC,OAAO,EAAEO,MAAM,CAACE,OAAO;QACvBR,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE,CAAC;MACf,CAAC;IACH,KAAKb,qBAAqB;MACxB,OAAO;QACL,GAAGe,KAAK;QACRP,SAAS,EAAE,KAAK;QAChBI,KAAK,EAAEI,MAAM,CAACE;MAChB,CAAC;IACH,KAAKjB,qBAAqB;MACxB,OAAO;QACL,GAAGc,KAAK;QACRP,SAAS,EAAE,IAAI;QACfI,KAAK,EAAE;MACT,CAAC;IACH,KAAKV,qBAAqB;MACxB,OAAO;QACL,GAAGa,KAAK;QACRP,SAAS,EAAE,KAAK;QAChBG,MAAM,EAAEK,MAAM,CAACE,OAAO,GAAG,QAAQ,GAAG,QAAQ;QAC5CN,KAAK,EAAE;MACT,CAAC;IACH,KAAKT,qBAAqB;MACxB,OAAO;QACL,GAAGY,KAAK;QACRP,SAAS,EAAE,KAAK;QAChBI,KAAK,EAAEI,MAAM,CAACE;MAChB,CAAC;IACH,KAAKd,eAAe;MAClB,OAAO;QACL,GAAGW,KAAK;QACRL,UAAU,EAAEM,MAAM,CAACE,OAAO;QAC1BP,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE;MACT,CAAC;IACH,KAAKP,SAAS;MACZ,OAAO;QACL,GAAGU,KAAK;QACRH,KAAK,EAAEI,MAAM,CAACE;MAChB,CAAC;IACH,KAAKZ,YAAY;MAAE;MACjB,OAAO;QACL,GAAGS,KAAK;QACRF,QAAQ,EAAEG,MAAM,CAACE;MACnB,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}