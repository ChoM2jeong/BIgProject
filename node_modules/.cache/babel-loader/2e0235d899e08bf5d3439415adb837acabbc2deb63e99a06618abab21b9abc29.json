{"ast":null,"code":"import { ADD_POST, UPDATE_POST, DELETE_POST, LOAD_POSTS } from '../actions/postActions';\nconst initialState = {\n  posts: []\n};\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_POSTS:\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case ADD_POST:\n      const addedPosts = [...state.posts, action.payload];\n      localStorage.setItem('posts', JSON.stringify(addedPosts));\n      return {\n        ...state,\n        posts: addedPosts\n      };\n    case UPDATE_POST:\n      const updatedPosts = state.posts.map(post => post.id === action.payload.id ? action.payload.updatedPost : post);\n      localStorage.setItem('posts', JSON.stringify(updatedPosts));\n      return {\n        ...state,\n        posts: updatedPosts\n      };\n    case DELETE_POST:\n      const filteredPosts = state.posts.filter(post => post.id !== action.payload);\n      localStorage.setItem('posts', JSON.stringify(filteredPosts));\n      return {\n        ...state,\n        posts: filteredPosts\n      };\n    default:\n      return state;\n  }\n};\nexport default postReducer;","map":{"version":3,"names":["ADD_POST","UPDATE_POST","DELETE_POST","LOAD_POSTS","initialState","posts","postReducer","state","action","type","payload","addedPosts","localStorage","setItem","JSON","stringify","updatedPosts","map","post","id","updatedPost","filteredPosts","filter"],"sources":["C:/Users/User/Desktop/final/front/src/redux/reducers/postReducer.js"],"sourcesContent":["import { ADD_POST, UPDATE_POST, DELETE_POST, LOAD_POSTS } from '../actions/postActions';\n\nconst initialState = {\n  posts: [],\n};\n\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    case ADD_POST:\n      const addedPosts = [...state.posts, action.payload];\n      localStorage.setItem('posts', JSON.stringify(addedPosts));\n      return {\n        ...state,\n        posts: addedPosts,\n      };\n    case UPDATE_POST:\n      const updatedPosts = state.posts.map((post) =>\n        post.id === action.payload.id ? action.payload.updatedPost : post\n      );\n      localStorage.setItem('posts', JSON.stringify(updatedPosts));\n      return {\n        ...state,\n        posts: updatedPosts,\n      };\n    case DELETE_POST:\n      const filteredPosts = state.posts.filter((post) => post.id !== action.payload);\n      localStorage.setItem('posts', JSON.stringify(filteredPosts));\n      return {\n        ...state,\n        posts: filteredPosts,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAEC,UAAU,QAAQ,wBAAwB;AAEvF,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,UAAU;MACb,OAAO;QACL,GAAGI,KAAK;QACRF,KAAK,EAAEG,MAAM,CAACE;MAChB,CAAC;IACH,KAAKV,QAAQ;MACX,MAAMW,UAAU,GAAG,CAAC,GAAGJ,KAAK,CAACF,KAAK,EAAEG,MAAM,CAACE,OAAO,CAAC;MACnDE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU,CAAC,CAAC;MACzD,OAAO;QACL,GAAGJ,KAAK;QACRF,KAAK,EAAEM;MACT,CAAC;IACH,KAAKV,WAAW;MACd,MAAMe,YAAY,GAAGT,KAAK,CAACF,KAAK,CAACY,GAAG,CAAEC,IAAI,IACxCA,IAAI,CAACC,EAAE,KAAKX,MAAM,CAACE,OAAO,CAACS,EAAE,GAAGX,MAAM,CAACE,OAAO,CAACU,WAAW,GAAGF,IAC/D,CAAC;MACDN,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACC,YAAY,CAAC,CAAC;MAC3D,OAAO;QACL,GAAGT,KAAK;QACRF,KAAK,EAAEW;MACT,CAAC;IACH,KAAKd,WAAW;MACd,MAAMmB,aAAa,GAAGd,KAAK,CAACF,KAAK,CAACiB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKX,MAAM,CAACE,OAAO,CAAC;MAC9EE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACM,aAAa,CAAC,CAAC;MAC5D,OAAO;QACL,GAAGd,KAAK;QACRF,KAAK,EAAEgB;MACT,CAAC;IACH;MACE,OAAOd,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}