{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final\\\\big-1-main\\\\src\\\\components\\\\js\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout, fetchUsername } from '../../redux/actions/authActions';\nimport Speaker_Button from './Speaker';\nimport { Cookies } from 'react-cookie';\nimport { formatDate } from '../../redux/actions/postActions';\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport axios from 'axios';\nimport '../css/Header.css';\nimport logo from '../../logo.png'; // 로고 이미지 경로\nimport soundIcon from '../../logo/sound_logo.png'; // 소리 아이콘 이미지 경로\nimport userIcon from '../../logo/user_logo.png'; // 유저 아이콘 이미지 경로\nimport mailIcon from '../../logo/mail_logo.png'; // 메일 아이콘 이미지 경로\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header({\n  openLoginPopup\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    isLoggedIn,\n    userId,\n    username\n  } = useSelector(state => state.auth);\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\n  const [notifications, setnotifications] = useState([]);\n  const cookies = new Cookies();\n  const jwtToken = cookies.get('Authorization');\n  const handleLogoClick = () => {\n    window.location.href = '/'; // 원하는 URL로 대체하세요\n  };\n  const fetchNotification = async () => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    try {\n      const response = await axios.get(`http://localhost:8080/api/mynotification`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      setnotifications(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  useEffect(() => {\n    if (jwtToken) {\n      fetchNotification();\n    }\n  }, []);\n  useEffect(() => {\n    if (jwtToken) {\n      dispatch(fetchUsername(jwtToken));\n    }\n  }, [jwtToken, dispatch]);\n  useEffect(() => {\n    if (jwtToken) {\n      const eventSource = new EventSourcePolyfill(`http://localhost:8080/api/v1/notifications/stream`, {\n        headers: {\n          'Authorization': jwtToken\n        },\n        heartbeatTimeout: 1740000\n      });\n      eventSource.onopen = () => {\n        console.log('connected');\n      };\n      eventSource.addEventListener('notification', e => {\n        const {\n          data: receivedConnectData\n        } = e;\n        console.log('connect event data: ', receivedConnectData);\n        fetchNotification();\n      });\n      eventSource.onerror = e => {\n        console.error('SSE connection error:', e);\n        eventSource.close();\n      };\n      return () => {\n        eventSource.close();\n      };\n    }\n  }, [jwtToken]);\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n  const handleNotificationClick = () => {\n    setIsNotificationOpen(!isNotificationOpen);\n  };\n  const handleNotificationItemClick = async (postId, notificationId) => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    try {\n      const response = await axios.put(`http://localhost:8080/api/${notificationId}/read`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      if (error.response) {\n        alert(error.response.data);\n        console.error(\"인증번호가 옳지 않습니다.\");\n      } else {\n        console.error('원인 모를 에러 발생', error);\n      }\n    }\n    window.location.href = `/post/${postId}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-left\",\n      children: /*#__PURE__*/_jsxDEV(Speaker_Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        onClick: handleLogoClick,\n        style: {\n          cursor: 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-right\",\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [username, \"\\uB2D8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/mypage\",\n          className: \"icon-button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userIcon,\n            alt: \"User Icon\",\n            className: \"user-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-button\",\n          onClick: handleNotificationClick,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mailIcon,\n            alt: \"Mail Icon\",\n            className: \"user-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), isNotificationOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-popup\",\n          children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\uC54C\\uB9BC\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleNotificationItemClick(notification.boardId, notification.id),\n              children: [notification.message, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatDate(notification.createdDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 46\n              }, this)]\n            }, notification.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-register\",\n          onClick: openLoginPopup,\n          children: \"\\uB85C\\uADF8\\uC778/\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userIcon,\n            alt: \"User Icon\",\n            className: \"user-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"r+eU6c19vwDQXjxZliu+mcmA/Lw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","Link","useSelector","useDispatch","logout","fetchUsername","Speaker_Button","Cookies","formatDate","EventSourcePolyfill","axios","logo","soundIcon","userIcon","mailIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","openLoginPopup","_s","dispatch","isLoggedIn","userId","username","state","auth","isNotificationOpen","setIsNotificationOpen","notifications","setnotifications","cookies","jwtToken","get","handleLogoClick","window","location","href","fetchNotification","bearerToken","startsWith","response","headers","data","error","console","eventSource","heartbeatTimeout","onopen","log","addEventListener","e","receivedConnectData","onerror","close","handleLogout","handleNotificationClick","handleNotificationItemClick","postId","notificationId","put","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","src","alt","to","length","map","notification","boardId","id","message","createdDate","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final/big-1-main/src/components/js/Header.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout ,fetchUsername} from '../../redux/actions/authActions';\nimport Speaker_Button from './Speaker';\nimport { Cookies } from 'react-cookie';\nimport { formatDate } from '../../redux/actions/postActions';\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport axios from 'axios';\nimport '../css/Header.css';\nimport logo from '../../logo.png'; // 로고 이미지 경로\nimport soundIcon from '../../logo/sound_logo.png'; // 소리 아이콘 이미지 경로\nimport userIcon from '../../logo/user_logo.png'; // 유저 아이콘 이미지 경로\nimport mailIcon from '../../logo/mail_logo.png'; // 메일 아이콘 이미지 경로\n\nfunction Header({ openLoginPopup }) {\n  const dispatch = useDispatch();\n  const { isLoggedIn, userId ,username} = useSelector((state) => state.auth);\n  const [ isNotificationOpen, setIsNotificationOpen ] = useState(false);\n  \n  const [notifications,setnotifications] = useState([]);\n  \n\n\n\n  const cookies = new Cookies();\n  const jwtToken = cookies.get('Authorization');\n\n  const handleLogoClick = () => {\n    window.location.href = '/'; // 원하는 URL로 대체하세요\n  };\n\n\n  const fetchNotification = async () => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n\n    try {\n      const response = await axios.get(`http://localhost:8080/api/mynotification`,{\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken,\n        },\n      });\n      \n      setnotifications(response.data)\n      \n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  \n  useEffect(() => {\n    if(jwtToken){\n      fetchNotification();\n      \n    }\n  }, []);\n\n  useEffect(() => {\n   \n    if (jwtToken) {\n      dispatch(fetchUsername(jwtToken));\n    }\n  }, [jwtToken, dispatch]);\n\n  useEffect(() => {\n    if (jwtToken) {\n      const eventSource = new EventSourcePolyfill(`http://localhost:8080/api/v1/notifications/stream`, {\n        headers: {\n          'Authorization': jwtToken,\n        },\n        heartbeatTimeout: 1740000,\n      });\n\n      eventSource.onopen = () => {\n        console.log('connected');\n      };\n\n      eventSource.addEventListener('notification', (e) => {\n        const { data: receivedConnectData } = e;\n        console.log('connect event data: ', receivedConnectData);\n        fetchNotification();\n      });\n\n      eventSource.onerror = (e) => {\n        console.error('SSE connection error:', e);\n        eventSource.close();\n      };\n\n      return () => {\n        eventSource.close();\n      };\n    }\n  }, [jwtToken]);\n\n\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  const handleNotificationClick = () => {\n    setIsNotificationOpen(!isNotificationOpen);\n  };\n\n  const handleNotificationItemClick = async (postId,notificationId) => {\n    \n\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n\n    try {\n      const response = await axios.put(`http://localhost:8080/api/${notificationId}/read`,{},{\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken,\n        },\n      });\n      \n      console.log(response.data);\n      \n    } catch (error) {\n      if (error.response) {\n        alert(error.response.data);\n        console.error(\"인증번호가 옳지 않습니다.\")\n      }else{\n        console.error('원인 모를 에러 발생', error);\n      }\n    }\n\n    window.location.href=`/post/${postId}`;\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-left\">\n        <Speaker_Button />\n      </div>\n      <div className=\"header-center\">\n        <div className=\"logo\" onClick={handleLogoClick} style={{ cursor: 'pointer' }}>\n          <img src={logo} alt=\"Logo\" />\n          </div>\n      </div>\n      <div className=\"header-right\">\n        {isLoggedIn ? (\n          <>\n            <span>{username}님</span>\n            <button className=\"logout-button\" onClick={handleLogout}>로그아웃</button>\n            <Link to=\"/mypage\" className=\"icon-button\">\n              <img src={userIcon} alt=\"User Icon\" className=\"user-icon\" />\n            </Link>\n            <button className=\"icon-button\" onClick={handleNotificationClick}>\n              <img src={mailIcon} alt=\"Mail Icon\" className=\"user-icon\" />\n            </button>\n            {isNotificationOpen && (\n              <div className=\"notification-popup\">\n                {notifications.length === 0 ? (\n                  <li>알림이 없습니다</li>\n                ) : (\n                 <ul>\n                  {notifications.map((notification) => (\n                    <li key={notification.id} onClick={() => handleNotificationItemClick(notification.boardId,notification.id)}>\n                      {notification.message} <span>{formatDate(notification.createdDate)}</span>\n                    </li>\n                  ))}\n                </ul>)}\n              </div>\n            )}\n          </>\n        ) : (\n          <>\n            <button className=\"login-register\" onClick={openLoginPopup}>로그인/회원가입</button>\n            <button className=\"icon-button\">\n              <img src={userIcon} alt=\"User Icon\" className=\"user-icon\" />\n            </button>\n          </>\n        )}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}