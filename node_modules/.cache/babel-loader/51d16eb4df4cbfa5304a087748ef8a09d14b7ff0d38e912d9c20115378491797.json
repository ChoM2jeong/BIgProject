{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\final\\\\big-1-main\\\\src\\\\components\\\\js\\\\UserPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from '../../redux/reducers/userReducer';\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport '../css/UserPosts.css';\nimport { formatDate } from '../../redux/actions/postActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPosts = () => {\n  _s();\n  const userData = useSelector(selectUserData);\n  const [posts, setPosts] = useState([]);\n  const [postCount, setPostCount] = useState(0);\n  const cookies = new Cookies();\n  const jwtToken = cookies.get('Authorization');\n  const fetchPosts = async () => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n    try {\n      const response = await axios.get(`http://localhost:8080/board/MyPage`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken\n        }\n      });\n      const postsData = Array.isArray(response.data) ? response.data : [];\n      setPosts(postsData);\n      setPostCount(postsData.length);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  useEffect(() => {\n    if (jwtToken) {\n      fetchPosts();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postList-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" \\uB0B4\\uAC00 \\uC791\\uC131\\uD55C \\uAC8C\\uC2DC\\uBB3C \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [postCount, \" \\uAC1C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/post/${post.id}`,\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post_writed_time\",\n            children: [formatDate(post.createdDate), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPosts, \"MBigo/QQfv1olEOGp71kAmtBD/E=\", false, function () {\n  return [useSelector];\n});\n_c = UserPosts;\nexport default UserPosts;\nvar _c;\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"names":["React","useState","useEffect","Link","useSelector","selectUserData","axios","Cookies","formatDate","jsxDEV","_jsxDEV","UserPosts","_s","userData","posts","setPosts","postCount","setPostCount","cookies","jwtToken","get","fetchPosts","bearerToken","startsWith","response","headers","postsData","Array","isArray","data","length","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","to","id","title","createdDate","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/final/big-1-main/src/components/js/UserPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from '../../redux/reducers/userReducer';\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport '../css/UserPosts.css';\nimport { formatDate } from '../../redux/actions/postActions';\n\nconst UserPosts = () => {\n  const userData = useSelector(selectUserData);\n  const [posts, setPosts] = useState([]);\n  const [postCount, setPostCount] = useState(0);\n\n  const cookies = new Cookies();\n  const jwtToken = cookies.get('Authorization');\n\n  const fetchPosts = async () => {\n    const bearerToken = jwtToken.startsWith('Bearer ') ? jwtToken : `Bearer ${jwtToken}`;\n\n    try {\n      const response = await axios.get(`http://localhost:8080/board/MyPage`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearerToken,\n        },\n      });\n\n      const postsData = Array.isArray(response.data) ? response.data : [];\n      setPosts(postsData);\n      setPostCount(postsData.length);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (jwtToken) {\n      fetchPosts();\n    }\n  }, []);\n\n  return (\n    <div className='postList-container'>\n      <div className='title'>\n        <h2> 내가 작성한 게시물 </h2>\n        <h2>{postCount} 개</h2>\n      </div>\n      <div className='list'>\n        <ul>\n          {posts.map(post => (\n            <li key={post.id}>\n              <Link to={`/post/${post.id}`}>\n                {post.title}\n              </Link>\n              <span className='post_writed_time'>{formatDate(post.createdDate)} </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default UserPosts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}